diff --git a/dist/rollup-plugin-userscript-metablock.common.js b/dist/rollup-plugin-userscript-metablock.common.js
index a98e4fdad1e005de43f44d91e366761ec7f7edf0..901972c834ade201dbd18f9c713180b3f847a705 100644
--- a/dist/rollup-plugin-userscript-metablock.common.js
+++ b/dist/rollup-plugin-userscript-metablock.common.js
@@ -44,9 +44,7 @@ class UnknownMetakeyToScriptManager extends Error {}
 class InvalidMetaValue extends Error {}
 
 const DEFAULT_METAS = {
-  name: 'New Script',
-  namespace: 'npmjs.com/rollup-plugin-userscript-metablock',
-  grant: 'none',
+  name: 'New Script'
 };
 
 const getMetaEntry = ([metakey, metavalue], { validator, manager }) => {
@@ -676,6 +674,23 @@ const parseOptions = (options) => {
     Object.assign(conf.metakeys, override);
   }
 
+  // handle automatic icon
+  if (conf.metakeys.icon && conf.metakeys.icon.startsWith("favicon:")) {
+    conf.metakeys.icon =
+      "https://www.google.com/s2/favicons?domain=" +
+      conf.metakeys.icon.substring(8);
+  } else if (conf.metakeys.match && !conf.metakeys.icon) {
+    const url = isString(conf.metakeys.match)
+      ? conf.metakeys.match
+      : conf.metakeys.match[0];
+
+    const match = /:\/\/(?<domain>.+?)\//.exec(url);
+    if (match && match.groups.domain) {
+      conf.metakeys.icon =
+        "https://www.google.com/s2/favicons?domain=" + match.groups.domain;
+    }
+  }
+
   // remove invalid keys
   conf.metakeys = Object.keys(conf.metakeys).reduce((collect, key) => {
     if (isValidMetakeyName(key)) {
@@ -752,7 +767,7 @@ const renderAll = (entries) => {
   }
   lines.push('// ==/UserScript==');
 
-  return lines.map((l) => l.trim()).join('\n');
+  return lines.map((l) => l.trim()).join('\n') + "\n";
 };
 
 function metablock(options = {}) {
@@ -766,6 +781,7 @@ function metablock(options = {}) {
   debug__default['default']('plugin:top::final')(final);
 
   return {
+    meta: final,
     renderChunk(code, renderedChunk, outputOptions) {
       const magicString = new MagicString__default['default'](code);
       magicString.prepend(final + '\n').trimEnd('\\n');
diff --git a/dist/rollup-plugin-userscript-metablock.esm.js b/dist/rollup-plugin-userscript-metablock.esm.js
index ff502fdb7c8fd4bb16c29e2bef9ecc6154309b68..3842a71069bd5ee5c63555309e9fe997d05afc95 100644
--- a/dist/rollup-plugin-userscript-metablock.esm.js
+++ b/dist/rollup-plugin-userscript-metablock.esm.js
@@ -754,6 +754,7 @@ function metablock(options = {}) {
   debug('plugin:top::final')(final);
 
   return {
+    meta: final,
     renderChunk(code, renderedChunk, outputOptions) {
       const magicString = new MagicString(code);
       magicString.prepend(final + '\n').trimEnd('\\n');
diff --git a/types/rollup-plugin-userscript-metablock.d.ts b/types/rollup-plugin-userscript-metablock.d.ts
index c454ed7d5290d84ab9860c456ff76d0f78c26f00..818446f32d72a11d30074d12588e7e7bb93fbeaa 100644
--- a/types/rollup-plugin-userscript-metablock.d.ts
+++ b/types/rollup-plugin-userscript-metablock.d.ts
@@ -12,7 +12,7 @@ declare module 'rollup-plugin-userscript-metablock' {
     include?: string | string[];
     exclude?: string | string[];
     icon?: string;
-    require?: string;
+    require?: string | string[];
 
     /** Default `"document-end"` */
     'run-at'?:
@@ -29,6 +29,31 @@ declare module 'rollup-plugin-userscript-metablock' {
     version?: string;
     noframes?: true;
     grant?: string | string[];
+
+    author?: string;
+    license?: string;
+
+    homepage?: string;
+    homepageURL?: string;
+    website?: string;
+    source?: string;
+
+    iconURL?: string;
+    defaulticon?: string;
+    icon64?: string;
+    icon64URL?: string;
+
+    updateURL?: string;
+    downloadURL?: string | 'none';
+    installURL?: string;
+    supportURL?: string;
+
+    connect?: string | string[];
+    webRequest?: string;
+    unwrap?: boolean;
+    nocompat?: boolean | string;
+
+    [field: string]: string | string[] | boolean | undefined;
   };
 
   export type Options = {
@@ -50,7 +75,10 @@ declare module 'rollup-plugin-userscript-metablock' {
     validator?: 'off' | 'warn' | 'error';
   };
 
-  function metablock (options?: Options): any;
+  function metablock (options?: Options): {
+    meta: string,
+    renderChunk(code, renderedChunk, outputOptions): string
+  };
 
   export default metablock;
 }